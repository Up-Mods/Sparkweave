plugins {
	alias libs.plugins.vanilla.gradle
}

minecraft {
	version(libs.versions.minecraft.get())
	if (file("src/main/resources/${mod_id}.accesswidener").exists()) {
		accessWideners(file("src/main/resources/${mod_id}.accesswidener"))
	}
}

dependencies {
	compileOnly libs.bundles.mixin
	compileOnly libs.jetbrains.annotations

	implementation libs.appdirs

	implementation libs.resourcefulconfig
	compileOnly "${libs.emi.asProvider().get()}:api"
}

sourceSets {
	testmod {
		java {
			compileClasspath += main.compileClasspath
			compileClasspath += main.output
			runtimeClasspath += main.runtimeClasspath
		}
	}
}

configurations {
	testmod {
		canBeResolved = false
		canBeConsumed = true
	}
}

artifacts {
	testmod(sourceSets.testmod.output.classesDirs.singleFile) {
		builtBy testmodClasses
	}
}
